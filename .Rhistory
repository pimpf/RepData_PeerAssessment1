source("myfunction.R")
pollutantmean(paste(getwd(), "specdata", sep = "/"), "sulfate", id = 20:25)
source("myfunction.R")
pollutantmean(paste(getwd(), "specdata", sep = "/"), "sulfate", id = 20:25)
source("myfunction.R")
pollutantmean(paste(getwd(), "specdata", sep = "/"), "sulfate", id = 20:25)
source("myfunction.R")
pollutantmean(paste(getwd(), "specdata", sep = "/"), "sulfate", id = 20:25)
source("myfunction.R")
pollutantmean(paste(getwd(), "specdata", sep = "/"), "sulfate", id = 20:25)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
?read.csv
source("myfunction.R")
complete("specdata", 1)
source("myfunction.R")
complete("specdata", 1)
?data.frame
source("myfunction.R")
?data.frame
complete("specdata", 1)
#colnames( numOfCompleteCasesPerFile ) <- c("id", "nobs");
View(complete)
View(complete)
?data.frame
source("myfunction.R")
complete("specdata", 1)
source("myfunction.R")
complete("specdata", 1)
source("myfunction.R")
complete("specdata", 1)
source("myfunction.R")
complete("specdata", 1)
source("myfunction.R")
complete("specdata", 1)
source("myfunction.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 1)
source("myfunction.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("myfunction.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("myfunction.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("myfunction.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("myfunction.R")
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("myfunction.R")
complete("specdata", 30:25)
complete("specdata", 30:25)
complete("specdata", c(2, 4, 8, 10, 12))
source("myfunction.R")
corr("specdata")
source("myfunction.R")
corr("specdata")
source("myfunction.R")
corr("specdata")
?head
?cor
source("myfunction.R")
cr <- corr("specdata", 150)
head(cr)
source("myfunction.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source("myfunction.R")
cr <- corr("specdata", 150)
summary(cr)
source("myfunction.R")
cr <- corr("specdata", 150)
summary(cr)
source("myfunction.R")
cr <- corr("specdata", 150)
source("myfunction.R")
cr <- corr("specdata", 150)
source("myfunction.R")
cr <- corr("specdata", 150)
source("myfunction.R")
cr <- corr("specdata", 150)
source("myfunction.R")
cr <- corr("specdata", 150)
head(cr)
source("myfunction.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_flags
cls_list
class(cls_list)
as.character(cls_list)
?lapply
cls_slist <- sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_color <- flags[, 11:17]
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply
sapply(unique_vals, length)
lapply(flags, unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
vapply(flags, unique, character)
sapply(flags, class)
vapply(flags, unique, character(1))
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size
object.size(plants)
names(plants)
head(plants)
head(plants[10,])
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10, replace = FALSE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0,1), 100, replace = TRUE)
sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <= sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips$1)
sum(flips[["1"]])
sum(flips["1"])
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(0, size = 100, prob = 0.7)
flips2 <- rbinom(n = 100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5, 10)
replicate(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t$min
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October
| 17, 1986 08:24"
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = "days")
data(cars)
?cars
head(cras)
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = "Speed", y = cars$speed)
plot(x = cars$dist, y = cars$speed, xlabel = "Speed")
plot(x = cars$dist, y = cars$speed, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot", title("My Plot Subtitle"))
plot(cars, title("My Plot Subtitle"))
plot(cars, sub = "My Plot Subtitle")
?par
par(col = "red")
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
data("mtcars")
data(mtcars)
dim(mtcars)
?boxplot
boxplot(mtcars, mpg ~ cyl)
boxplot(mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
library(datasets)
data("iris")
data(iris)
?iris
iris$Sepal.Length
mean(iris$Sepal.Length)
rowMeans(iris[, 1:4])
x <- rowMeans(iris[, 1:4])
class(x)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
y <- apply(iris[, 1:4], 2, mean)
class(y)
data(mtcars)
?mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, avg)
split(mtcars$cyl, c(4, 8))
lapply(split(mtcars$cyl, c(4, 8)), mean)
var <- lapply(split(mtcars$cyl, c(4, 8)), mean)
abs(var)
?abs
abs(var[1]-var[2])
var[1]
var[2]
var[1] - var[2]
abs(as.numeric(var[1])-as.numeric(var[2])
)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
iris
tapply(iris$Sepal.Length, virginica, mean)
tapply(iris$Sepal.Length, "virginica", mean)
tapply(iris$Sepal.Length, iris$Species = "virginica", mean)
apply(iris$Sepal.Length, iris$Species = "virginica", mean)
apply(iris$Sepal.Length, 6, mean)
apply(iris$Sepal.Length, 5, mean)
rowMeans(iris$Sepal.Length)
colMeans(iris$Sepal.Length)
split(iris$Sepal.Length, iris$Species)
virg <- split(iris$Sepal.Length, iris$Species)$virginica
virg
mean(virg)
split(mtcars$cyl, c(4, 8)
)
hp4 <- split(mtcars$hp, mtcars$cyl)$4
hp4 <- split(mtcars$hp, mtcars$cyl)[['4']]
hp4
mhp4 <- mean(hp4)
hp8 <- split(mtcars$hp, mtcars$cyl)[['8']]
mhp8 <- mean(hp8)
mp4
mhp4
mhp8
abs(mhp4 - mhp8)
## This script contains a pair of functions that cache the inverse of a matrix.
source(ProgrammingAssignment2/cachematrix.R)
source(getwd() + 'ProgrammingAssignment2/cachematrix.R')
getwd
getwd()
source("~/ProgrammingAssignment2/cachematrix.R")
source("ProgrammingAssignment2/cachematrix.R")
source("ProgrammingAssignment2/cachematrix.R")
set.seed(1110201)
r = rnorm(1000000)
mat1 = matrix(r, nrow=1000, ncol=1000)
test(mat1)
source("ProgrammingAssignment2/cachematrix.R")
set.seed(1110201)
r = rnorm(1000000)
mat1 = matrix(r, nrow=1000, ncol=1000)
test(mat1)
?qunif
quinf(c(0,1), 0, 1)
quinf(c(0,1))
qunif(c(0,1))
qbeta(0.75, 2, 1)
qbeta(0.75, 1, 1)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(temp)
plot(x, prob)
plot(x, Prob)
plot(x, p)
install.packages("sqldf")
library("sqldf")
setwd("/Users/pimpf/workplace/Getting and Cleaning Data")
getwd
getwd()
acs <- read.csv("getdata-data-ss06pid.csv");
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select distinct AGEP from acs")
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
html <- readLine(url)
library(XML)
html <- readLine(url)
library("XML")
html <- readLine(url)
library(httr)
html <- GET(url)
cont <- content(html, as="text")
summary(cont)
parsedHtml <- htmlParse(cont, asText = TRUE)
htmlCode <- readLines(url)
htmlCode
html[20]
html[10]
htmlCode[10]
length(htmlCode(1-))
length(htmlCode(10))
length(htmlCode[10])
length(htmlCode[20])
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[40])
nchar(htmlCode[100])
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ")
x <- read.fwf(
file=url("ttps://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(9, 7,4, 9,4, 9,4, 9,4))
x <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(9, 7,4, 9,4, 9,4, 9,4))
df <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4),
skip=4
)
df <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4),
skip=4, mode("curl")
)
?read.fwf
df <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for", method = "libcurl"),
widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4),
skip=4, mode("curl")
)
df <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", method = "libcurl"),
widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4),
skip=4, mode("curl")
)
df <- read.fwf(url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", method = "libcurl"),
widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4),
skip=4, mode("curl")
)
file <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", method = "libcurl")
df <- read.fwf(file = file())
f <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", method = "libcurl")
df <- read.fwf(file = f, widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip=4)
head(df)
sum(df[4]) + sum(df[9])
head(df[4])
df
swirl()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day, label = TRUE)
now()
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-07")
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms(03:22:14)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 10, minutes = 7()
)
this_moment <- update(this_moment, hours = 10, minutes = 7)
this_moment
now(tzone = "America/New_York")
now("America/New_York")
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, munites = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- update(depart, hours = 15, minutes = 50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time)
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
?trellis.par.set()
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
setwd
setwd("/Users/pimpf/workplace/Reproducible_Research")
getwd()
setwd("/Users/pimpf/workplace/Reproducible_Research/RepData_PeerAssessment1")
getwd()
install.packages("stable")
install.packages("xtable")
dim(activity)
dim(activity)
head(activityBeta);
?aggregate
?replace
